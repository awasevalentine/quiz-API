# ------------------------------------------------------
# THIS FILE WAS AUTOMATICALLY GENERATED (DO NOT MODIFY)
# ------------------------------------------------------

type Quiz {
  id: ID!
  title: String!
  description: String!
  questions: [Question!]!
  created_at: DateTime!
  updated_at: DateTime!
}

"""
A date-time string at UTC, such as 2019-12-03T09:54:33Z, compliant with the date-time format.
"""
scalar DateTime

type Question {
  id: ID!
  text: String!
  options: [String!]!
  correctAnswer: String!
  created_at: DateTime!
  updated_at: DateTime!
}

type User {
  id: ID!
  username: String!
  email: String!
  role: Role!
  password: String!
  created_at: DateTime!
  updated_at: DateTime!
}

enum Role {
  ADMIN
  USER
}

type Score {
  id: ID!
  userId: User!
  quizId: Quiz!
  score: Float!
  date: DateTime!
  created_at: DateTime!
  updated_at: DateTime!
}

type Query {
  getUser(username: String!): User!
  login(loginCredentials: LoginDto!): String!
  getAllQuiz: [Quiz!]!
  getQuiz(quizId: String!): Quiz!
  getAllQuestions: [Question!]!
  getQuestion(questionId: String!): Question!
  getAllScores: [Score!]!
  getScore(scoreId: String!): Score!
  getScoreByUser(userId: String!): [Score!]!
  getScoreByQuiz(quizId: String!): [Score!]!
}

input LoginDto {
  username: String!
  password: String!
}

type Mutation {
  createUser(createUser: CreateUserDto!): String!
  updateUser(updatePayload: UpdateUserDto!): User!
  createQuiz(createQuizPayload: CreateQuizDto!): Quiz!
  updateQuiz(quizId: String!, updateQuizPayload: UpdateQuizDto!): Quiz!
  deleteQuiz(quizId: String!): String!
  createQuestion(createQuestionPayload: CreateQuestionDto!): Question!
  updateQuestion(questionId: String!, updateQuestionPayload: UpdateQuestionDto!): Question!
  deleteQuestion(questionId: String!, quizId: String!): String!
  createScore(createScorePayload: CreateScoreDto!): Score!
  updateScore(scoreId: String!, updateScorePayload: UpdateScoreDto!): Score!
  deleteScore(scoreId: String!): Score!
}

input CreateUserDto {
  username: String!
  email: String!
  password: String!
  role: Role = USER
}

input UpdateUserDto {
  username: String
  email: String
  password: String
  role: Role = USER
}

input CreateQuizDto {
  title: String!
  description: String
}

input UpdateQuizDto {
  title: String
  description: String
}

input CreateQuestionDto {
  quizId: String!
  text: String!
  options: [String!]!
  correctAnswer: String!
}

input UpdateQuestionDto {
  text: String
  options: [String!]
  correctAnswer: String
}

input CreateScoreDto {
  userId: String!
  quizId: String!
  score: String!
}

input UpdateScoreDto {
  userId: String
  quizId: String
  score: String
}